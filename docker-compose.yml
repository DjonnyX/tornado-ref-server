version: '3.1'

services:
    mongo:
        image: mongo
        restart: always
        environment:
            # creating a database when container is initialised
            MONGO_INITDB_DATABASE_USERNAME: dbuser
            MONGO_INITDB_DATABASE_PASSWORD: dbpassword
            MONGO_INITDB_DATABASE: appdata
            MONGO_INITDB_ROOT_USERNAME: dbrootusername
            MONGO_INITDB_ROOT_PASSWORD: dbrootuserpassword
        volumes:
            - ./mongo-entrypoint.sh:/docker-entrypoint-initdb.d/mongo-entrypoint.sh:ro
            - db:/data/db

    mongo-express:
        image: mongo-express:0.54.0
        restart: always
        ports:
            - "8082:8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: dbrootusername
            ME_CONFIG_MONGODB_ADMINPASSWORD: dbrootuserpassword
            ME_CONFIG_BASICAUTH_USERNAME: admin
            ME_CONFIG_BASICAUTH_PASSWORD: admin

    backend:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        environment:
            # Секретный ключ для проверки клиентского токена
            AUTH_PRIVATE_KEY: f91eb2d2-c8d5-4cef-9b25-fec0e7b06882
            # Токен доступа к серверу лицензирования
            AUTH_LIC_SERVER_API_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiaW50ZXJuYWwifQ.ueKapcUEpaO6FWfsPbfdEew5QSrXwkwb1R4EEUu8P4I

            # DB_URI
            DB_URI: dbuser:dbpassword@mongo:27017/appdata
            # Server Port
            PORT: 8080
            # Client Host
            CLIENT_HOST: http://127.0.0.1:8080
            # Swagger Doc Path
            SWAGGER_ROUTE: /docs
            # LicServer
            LIC_SERVER_HOST: http://192.168.8.105:8078
        ports:
            - 8080:8080
        volumes:
            - assets:/app/assets
            - backups:/app/backups

volumes:
    # Configure shared volumes to be used in the services above.
    db:
    assets:
    backups:
